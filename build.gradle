plugins {
    id 'com.cisco.external-build' version '1.10'
}

import com.cisco.gradle.externalbuild.ExternalNativeLibrarySpec
import com.cisco.gradle.externalbuild.tasks.CMake

def getIntermediateDir = { binary ->
    file("${buildDir}/external-build/${binary.component.name}/${binary.targetPlatform.name}")
}

model {
    components {
        frosty(ExternalNativeLibrarySpec) {
            buildConfig(CMake) {
                def intDir = getIntermediateDir(binary)

                // Uncomment for easier debugging
                //redirectOutput = false

                cmakeRoot '.'

                inputs.dir 'src'
                inputs.file 'CMakeLists.txt'
                outputs.dir intDir

                workingDir intDir
                environment = [
                        'PATH': toolChainPath,
                ]
            }
            buildOutput {
                outputFile = file("${buildDir}/libfrosty.so")

                exportedHeaders {
                    srcDir "${buildDir}/include"
                }
            }
        }
    }
}